{"version":3,"sources":["index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger1","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","logger","result","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","canProcess","arr","id","logSuccess","logError","warn","amount","catch"],"mappings":"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","file":"src.e3b641ba.js","sourceRoot":"..\\src","sourcesContent":["\r\n\r\n //import menuCardTmpl from \"./templates/card_menu.hbs\";\r\n//import cards from './menu.json'\r\n//import './styles.css';\r\n\r\n\r\n\r\n//Задача 1\r\n\r\n\r\n    const delay = ms => {\r\n        return new Promise ((resolve) =>{\r\n          setTimeout(()=>{\r\n               resolve(`${ms}`);}, ms);\r\n        });\r\n        };\r\n      \r\n      \r\n      const logger1 = time => console.log(`Resolved after ${time}ms`);\r\n      \r\n      // Вызовы функции для проверки\r\n      delay(2000).then(logger1); // Resolved after 2000ms\r\n      delay(1000).then(logger1); // Resolved after 1000ms\r\n      delay(1500).then(logger1); // Resolved after 1500ms\r\n\r\n\r\n\r\n// Задача 2\r\n\r\n      const users = [\r\n        { name: 'Mango', active: true },\r\n        { name: 'Poly', active: false },\r\n        { name: 'Ajax', active: true },\r\n        { name: 'Lux', active: false },\r\n      ];\r\n      \r\n      const toggleUserState = (allUsers, userName) => {\r\n\r\n        const updatedUsers = allUsers.map(user =>\r\n          user.name === userName ? { ...user, active: !user.active } : user,\r\n        );\r\n      \r\n       return Promise.resolve(updatedUsers);\r\n      };\r\n      \r\n      const logger = result => console.table(result);\r\n   \r\n      toggleUserState(users, 'Mango').then(logger);\r\n      toggleUserState(users, 'Lux').then(logger);\r\n\r\n\r\n// Задача 3\r\n\r\n      const randomIntegerFromInterval = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n      };\r\n      \r\n      const makeTransaction = (transaction) => {\r\n        const delay = randomIntegerFromInterval(200, 500);\r\n      \r\n       return new Promise((resolve, reject)=>{\r\n        setTimeout(() => {\r\n            const canProcess = Math.random() > 0.3;\r\n        \r\n            if (canProcess) {\r\n\r\n                const arr = [transaction.id, delay ];\r\n            \r\n              resolve(arr);\r\n             \r\n            } else {\r\n              reject(transaction.id);\r\n            }\r\n          }, delay);\r\n           \r\n       });\r\n      };\r\n      \r\n      const logSuccess = ([id, time ]) => {\r\n        console.log(`Transaction ${id} processed in ${time} ms`);\r\n      };\r\n      \r\n      const logError = id => {\r\n        console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n      };\r\n\r\n \r\n\r\n      makeTransaction({ id: 70, amount: 150 })\r\n      .then(logSuccess)\r\n      .catch(logError);\r\n    \r\n    makeTransaction({ id: 71, amount: 230 })\r\n      .then(logSuccess)\r\n      .catch(logError);\r\n    \r\n    makeTransaction({ id: 72, amount: 75 })\r\n      .then(logSuccess)\r\n      .catch(logError);\r\n    \r\n    makeTransaction({ id: 73, amount: 100 })\r\n      .then(logSuccess)\r\n      .catch(logError);"]}